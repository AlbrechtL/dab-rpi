#include <QImage>
#include <QPointF>
#include <QVariant>
#include <QVariantMap>
#include <QVector>

#include "audio_output.h"
#include "dab-constants.h"
#include "radio-receiver.h"
#include "ringbuffer.h"
#include "channels.h"

class CRadioController
{
    PROP(QString DateTime READONLY);
    PROP(bool isSync READONLY);
    PROP(bool isFICCRC READONLY);
    PROP(bool isSignal READONLY);
    PROP(bool isStereo READONLY);
    PROP(bool isDAB READONLY);
    PROP(int snr READONLY);
    PROP(int frequencyCorrection READONLY);
    PROP(float frequencyCorrectionPpm READONLY);
    PROP(int bitRate READONLY);
    PROP(int audioSampleRate READONLY);
    PROP(int frameErrors READONLY);
    PROP(int rsErrors READONLY);
    PROP(int aacErrors READONLY);

    PROP(bool isHwAGCSupported READONLY);
    PROP(bool hwAGC READWRITE);
    PROP(bool agc READWRITE);
    PROP(float gainValue READONLY);
    PROP(int gainCount READONLY);
    PROP(int gain READWRITE);

    PROP(qreal Volume READWRITE);

    PROP(QString errorMsg READONLY);
    PROP(QImage mot);
    PROP(QString channel);

    SIGNAL(deviceReady());
    SIGNAL(deviceClosed());
    SIGNAL(stationsCleared());
    SIGNAL(foundStation(QString Station, QString CurrentChannel));
    SIGNAL(scanStopped());
    SIGNAL(scanProgress(int Progress));
    SIGNAL(spectrumUpdated(qreal Ymax, qreal Xmin, qreal Xmax, QVector<QPointF> Data));

    SIGNAL(showErrorMessage(QString Text));
    SIGNAL(showInfoMessage(QString Text));

    SLOT(startScan());
    SLOT(stopScan());
    SLOT(play(QString Channel, QString Station));
    SLOT(setStation(QString Station, bool Force = false));
    SLOT(setChannel(QString Channel, bool isScan, bool Force = false));
    SLOT(setManualChannel(QString Channel));

    SLOT(closeDevice());
    SLOT(onEventLoopStarted());
    SLOT(setErrorMessage(QString Text));
    SLOT(setInfoMessage(QString Text));
    SLOT(setAutoPlay(QString Channel, QString Station));
};
